# One application per environment we want to deploy

# DEV ENVIRONMENT
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata: 
  name: services-dev
  namespace: argocd
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: infra-dev
  source:
    path: helm/env-config
    repoURL: https://github.com/b-dorsal/infra-reference.git
    targetRevision: main
    helm:
      releaseName: env-config
      valueFiles:
        - ../../config/config.services.yaml
      valuesObject:
        env_name: dev
  syncPolicy:
    automated: 
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - RespectIgnoreDifferences=true
---
# Tekton
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tekton
  namespace: argocd
spec:
  project: cicd
  source:
    repoURL: https://github.com/b-dorsal/infra-reference.git
    targetRevision: main
    path: helm/tekton
    helm:
      releaseName: tekton
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
# Traefik
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  project: traefik
  source:
    repoURL: https://github.com/traefik/traefik-helm-chart.git
    targetRevision: master
    path: traefik
  destination:
    server: https://kubernetes.default.svc
    namespace: traefik
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
# Grafana OSS
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  project: monitoring
  source:
    repoURL: https://github.com/grafana/helm-charts
    targetRevision: main
    path: charts/grafana
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  valuesObject:
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server.monitoring.svc.cluster.local
          access: proxy
          isDefault: true
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
# Prometheus
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
spec:
  project: monitoring
  source:
    repoURL: https://github.com/prometheus-community/helm-charts
    targetRevision: main
    chart: charts/prometheus
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  valuesObject:
    serverFiles:
      prometheus.yml:
        scrape_configs:
          - job_name: 'tekton'
            static_configs:
              - targets: 
                - 'tekton-pipelines-controller.tekton-pipelines.svc.cluster.local:9090'
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true